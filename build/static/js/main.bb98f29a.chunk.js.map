{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","toFixed","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","addCredit","useState","newDescription","setDescription","newAmount","setAmount","style","borderCollapse","width","borderBottom","padding","textAlign","map","credit","description","amount","date","id","parseFloat","step","Debits","debits","addDebit","debit","App","newCredit","creditList","length","Date","toISOString","prevState","newDebit","debitList","logInInfo","newUser","currentUser","fetch","then","response","json","data","creditsTotal","forEach","catch","error","console","debitsTotal","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iQAOMA,E,4JAEJ,WACE,OACE,4CACYC,KAAKC,MAAMC,eAAeC,QAAQ,U,GALvBC,aAWdL,ICTTM,E,4JACJ,WACE,OACE,gCACE,qBAAKC,IAAI,gCAAgCC,IAAI,SAE7C,+CAEA,cAAC,IAAD,CAAMC,GAAG,eAAT,0BACA,uBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,mBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,2DACA,uBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,0DACA,uBAAK,uBACL,cAAC,EAAD,CAAgBN,eAAgBF,KAAKC,MAAMC,wB,GAhBhCE,aAsBJC,ICtBTI,E,4JACJ,WACE,OACE,gCACE,8CAEA,6CAAgBT,KAAKC,MAAMS,YAC3B,iDAAoBV,KAAKC,MAAMU,eAC/B,uBACA,cAAC,IAAD,CAAMH,GAAG,IAAT,mC,GATkBJ,aAeXK,IC0CAG,E,kDAvDb,WAAaX,GAAQ,IAAD,8BAClB,cAAMA,IAYRY,aAAe,SAACC,GACd,IAAMC,EAAW,eAAO,EAAKC,MAAMC,MACnCF,EAAYL,SAAWI,EAAEI,OAAOC,MAChC,EAAKC,SAAS,CAACH,KAAMF,KAhBH,EAoBpBM,aAAe,SAACP,GACdA,EAAEQ,iBACF,EAAKrB,MAAMsB,UAAU,EAAKP,MAAMC,MAChC,EAAKG,SAAS,CAACI,UAAU,KArBzB,EAAKR,MAAQ,CACXC,KAAM,CAEJP,SAAU,EAAKT,MAAMgB,KAAKP,SAC1Be,SAAU,IAEZD,UAAU,GARM,E,0CA0BpB,WAEE,OAAIxB,KAAKgB,MAAMQ,SACL,cAAC,IAAD,CAAUhB,GAAG,iBAKrB,gCACE,uCAEA,uBAAMkB,SAAU1B,KAAKqB,aAArB,UACE,gCACE,8CACA,uBAAOM,KAAK,OAAOC,KAAK,WAAWC,aAAc7B,KAAKC,MAAMgB,KAAKP,SAAUoB,SAAU9B,KAAKa,kBAE5F,gCACE,6CACA,uBAAOc,KAAK,WAAWC,KAAK,gBAE9B,+CAEF,uBACA,cAAC,IAAD,CAAMpB,GAAG,IAAT,mC,GAlDYJ,a,QCiEL2B,EAjEC,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,UAAW/B,EAAoB,EAApBA,eACpC,EAAyCgC,mBAAS,IAAlD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OACE,gCACE,yCACA,wBAAOC,MAAO,CAAEC,eAAgB,WAAYC,MAAO,QAAnD,UACI,gCACE,qBAAIF,MAAO,CAAEG,aAAc,kBAA3B,UACE,oBAAIH,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,yBACA,oBAAIL,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,oBACA,oBAAIL,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,uBAGJ,gCACGZ,EAAQa,KAAI,SAACC,GAAD,OACX,qBAAoBP,MAAO,CAAEG,aAAc,kBAA3C,UACE,oBAAIH,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,SAAmDE,EAAOC,cAC1D,oBAAIR,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,SAAmDE,EAAOE,OAAO7C,QAAQ,KACzE,oBAAIoC,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,SAAmDE,EAAOG,SAHnDH,EAAOI,YAQxB,uBACA,gCACI,4CAEA,uBAAMxB,SAlCO,SAACZ,GACpBA,EAAEQ,iBAEFW,EAAUE,EAAgBgB,WAAWd,IAErCD,EAAe,IACfE,EAAU,KA4BJ,UACA,iDAEE,uBAAOX,KAAK,OAAOR,MAAOgB,EAAgBL,SA7CpB,SAAChB,GAC/BsB,EAAetB,EAAEI,OAAOC,aA8ClB,4CAEE,uBAAOQ,KAAK,SAASyB,KAAK,OAAOjC,MAAOkB,EAAWP,SA7ClC,SAAChB,GAC1BwB,EAAUxB,EAAEI,OAAOC,aA8Cb,wBAAQQ,KAAK,SAAb,8BAGJ,uBAAK,uBACL,cAAC,EAAD,CAAgBzB,eAAgBA,IAChC,cAAC,IAAD,CAAMM,GAAG,IAAT,gCCMS6C,EAlEA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,SAAUrD,EAAoB,EAApBA,eACjC,EAAyCgC,mBAAS,IAAlD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OACE,gCACE,wCAEA,wBAAOC,MAAO,CAAEC,eAAgB,WAAYC,MAAO,QAAnD,UACI,gCACE,qBAAIF,MAAO,CAAEG,aAAc,kBAA3B,UACE,oBAAIH,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,yBACA,oBAAIL,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,oBACA,oBAAIL,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,uBAGJ,gCACGU,EAAOT,KAAI,SAACW,GAAD,OACV,qBAAmBjB,MAAO,CAAEG,aAAc,kBAA1C,UACE,oBAAIH,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,SAAmDY,EAAMT,cACzD,oBAAIR,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,SAAmDY,EAAMR,OAAO7C,QAAQ,KACxE,oBAAIoC,MAAO,CAAEI,QAAS,MAAOC,UAAW,QAAxC,SAAmDY,EAAMP,SAHlDO,EAAMN,YAQvB,uBACA,gCACI,2CAEA,uBAAMxB,SAnCO,SAACZ,GACpBA,EAAEQ,iBAEFiC,EAASpB,EAAgBgB,WAAWd,IAEpCD,EAAe,IACfE,EAAU,KA6BJ,UACA,iDAEE,uBAAOX,KAAK,OAAOR,MAAOgB,EAAgBL,SA9CpB,SAAChB,GAC/BsB,EAAetB,EAAEI,OAAOC,aA+ClB,4CAEE,uBAAOQ,KAAK,SAASyB,KAAK,OAAOjC,MAAOkB,EAAWP,SA9ClC,SAAChB,GAC1BwB,EAAUxB,EAAEI,OAAOC,aA+Cb,wBAAQQ,KAAK,SAAb,6BAGJ,uBAAK,uBACL,cAAC,EAAD,CAAgBzB,eAAgBA,IAChC,cAAC,IAAD,CAAMM,GAAG,IAAT,gCCgDSiD,E,kDAtGb,aAAe,IAAD,8BACZ,gBA0CFxB,UAAY,SAACc,EAAaC,GACxB,IAAMU,EAAY,CAChBR,GAAI,EAAKlC,MAAM2C,WAAWC,OAAS,EACnCb,YAAaA,EACbC,OAAQA,EACRC,MAAM,IAAIY,MAAOC,eAEnB,EAAK1C,UAAS,SAAC2C,GAAD,MAAgB,CAC5BJ,WAAW,GAAD,mBAAMI,EAAUJ,YAAhB,CAA4BD,IACtCxD,eAAgB6D,EAAU7D,eAAiB8C,OApDjC,EAwDdO,SAAW,SAACR,EAAaC,GACvB,IAAMgB,EAAW,CACfd,GAAI,EAAKlC,MAAMiD,UAAUL,OAAS,EAClCb,YAAaA,EACbC,OAAQA,EACRC,MAAM,IAAIY,MAAOC,eAEnB,EAAK1C,UAAS,SAAC2C,GAAD,MAAgB,CAC5BE,UAAU,GAAD,mBAAMF,EAAUE,WAAhB,CAA2BD,IACpC9D,eAAgB6D,EAAU7D,eAAiB8C,OAjEjC,EAsEdzB,UAAY,SAAC2C,GACX,IAAMC,EAAO,eAAO,EAAKnD,MAAMoD,aAC/BD,EAAQzD,SAAWwD,EAAUxD,SAC7B,EAAKU,SAAS,CAACgD,YAAaD,KAvE5B,EAAKnD,MAAQ,CACXd,eAAgB,EAChByD,WAAY,GACZM,UAAW,GACXG,YAAa,CACX1D,SAAU,YACVC,YAAa,aARL,E,qDAad,WAAqB,IAAD,OAElB0D,MAAM,oDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKrD,SAAS,CAAEuC,WAAYc,IAC5B,IAAIC,EAAe,EACnB,EAAK1D,MAAM2C,WAAWgB,SAAQ,SAAA7B,GAC5B4B,GAAgB5B,EAAOE,UAEzB,EAAK5B,SAAS,CAAElB,eAAgBwE,OAEjCE,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAM,0BAA2BA,MAG7DR,MAAM,mDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKrD,SAAS,CAAE6C,UAAWQ,IAC3B,IAAIM,EAAc,EAClB,EAAK/D,MAAMiD,UAAUU,SAAQ,SAAAnB,GAC3BuB,GAAevB,EAAMR,UAEvB,EAAK5B,UAAS,SAAC2C,GAAD,MAAgB,CAC5B7D,eAAgB6D,EAAU7D,eAAiB6E,SAG9CH,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAM,yBAA0BA,Q,oBAqC9D,WAAU,IAAD,OAWP,OACE,cAAC,IAAD,CAAQG,SAAS,uCAAjB,SACE,gCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAZN,kBAAO,cAAC,EAAD,CAAMjF,eAAgB,EAAKc,MAAMd,oBAaxD,cAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,eAAeC,OAZV,kBAC3B,cAAC,EAAD,CAAazE,SAAU,EAAKM,MAAMoD,YAAY1D,SAAUC,YAAa,EAAKK,MAAMoD,YAAYzD,iBAYxF,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,SAASC,OAVV,kBAAO,cAAC,EAAD,CAAOlE,KAAM,EAAKD,MAAMoD,YAAa7C,UAAW,EAAKA,eAW7E,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,WAAWC,OAVV,kBAAO,cAAC,EAAD,CAASnD,QAAS,EAAKhB,MAAM2C,WAAY1B,UAAW,EAAKA,UAAW/B,eAAgB,EAAKc,MAAMd,oBAWzH,cAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,UAAUC,OAVV,kBAAO,cAAC,EAAD,CAAQ7B,OAAQ,EAAKtC,MAAMiD,UAAWV,SAAU,EAAKA,SAAUrD,eAAgB,EAAKc,MAAMd,6B,GAtF3GE,aCJHgF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BX,M","file":"static/js/main.bb98f29a.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance.toFixed(2)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport React, { useState } from \"react\";\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Credits = ({credits, addCredit, accountBalance}) => {\r\n  const [newDescription, setDescription] = useState(\"\");\r\n  const [newAmount, setAmount] = useState(\"\");\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addCredit(newDescription, parseFloat(newAmount));\r\n\r\n    setDescription(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\r\n          <thead>\r\n            <tr style={{ borderBottom: \"1px solid #000\" }}>\r\n              <th style={{ padding: \"8px\", textAlign: \"left\" }}>Description</th>\r\n              <th style={{ padding: \"8px\", textAlign: \"left\" }}>Amount</th>\r\n              <th style={{ padding: \"8px\", textAlign: \"left\" }}>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {credits.map((credit) => (\r\n              <tr key={credit.id} style={{ borderBottom: \"1px solid #000\" }}>\r\n                <td style={{ padding: \"8px\", textAlign: \"left\" }}>{credit.description}</td>\r\n                <td style={{ padding: \"8px\", textAlign: \"left\" }}>{credit.amount.toFixed(2)}</td>\r\n                <td style={{ padding: \"8px\", textAlign: \"left\" }}>{credit.date}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      <br/>\r\n      <div>\r\n          <h1>Add Credit</h1>\r\n          \r\n          <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Description:\r\n            <input type=\"text\" value={newDescription} onChange={handleDescriptionChange} />\r\n          </label>\r\n          <label>\r\n            Amount:\r\n            <input type=\"number\" step=\"0.01\" value={newAmount} onChange={handleAmountChange} />\r\n          </label>\r\n          <button type=\"submit\">Add Credit</button>\r\n        </form>\r\n      </div>\r\n      <br/><br/>\r\n      <AccountBalance accountBalance={accountBalance}/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport React, { useState } from \"react\";\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Debits = ({debits, addDebit, accountBalance}) => {\r\n  const [newDescription, setDescription] = useState(\"\");\r\n  const [newAmount, setAmount] = useState(\"\");\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addDebit(newDescription, parseFloat(newAmount));\r\n\r\n    setDescription(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n\r\n      <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\r\n          <thead>\r\n            <tr style={{ borderBottom: \"1px solid #000\" }}>\r\n              <th style={{ padding: \"8px\", textAlign: \"left\" }}>Description</th>\r\n              <th style={{ padding: \"8px\", textAlign: \"left\" }}>Amount</th>\r\n              <th style={{ padding: \"8px\", textAlign: \"left\" }}>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {debits.map((debit) => (\r\n              <tr key={debit.id} style={{ borderBottom: \"1px solid #000\" }}>\r\n                <td style={{ padding: \"8px\", textAlign: \"left\" }}>{debit.description}</td>\r\n                <td style={{ padding: \"8px\", textAlign: \"left\" }}>{debit.amount.toFixed(2)}</td>\r\n                <td style={{ padding: \"8px\", textAlign: \"left\" }}>{debit.date}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      <br/>\r\n      <div>\r\n          <h1>Add Debit</h1>\r\n          \r\n          <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Description:\r\n            <input type=\"text\" value={newDescription} onChange={handleDescriptionChange} />\r\n          </label>\r\n          <label>\r\n            Amount:\r\n            <input type=\"number\" step=\"0.01\" value={newAmount} onChange={handleAmountChange} />\r\n          </label>\r\n          <button type=\"submit\">Add Debit</button>\r\n        </form>\r\n      </div>\r\n      <br/><br/>\r\n      <AccountBalance accountBalance={accountBalance}/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Debits;","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 0.00,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch Credits from API\r\n    fetch(\"https://johnnylaicode.github.io/api/credits.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ creditList: data });\r\n        let creditsTotal = 0;\r\n        this.state.creditList.forEach(credit => {\r\n          creditsTotal += credit.amount;\r\n        });\r\n        this.setState({ accountBalance: creditsTotal });\r\n      })\r\n      .catch((error) => console.error(\"Error fetching Credits:\", error));\r\n\r\n    // Fetch Debits from API\r\n    fetch(\"https://johnnylaicode.github.io/api/debits.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ debitList: data });\r\n        let debitsTotal = 0;\r\n        this.state.debitList.forEach(debit => {\r\n          debitsTotal += debit.amount;\r\n        });\r\n        this.setState((prevState) => ({\r\n          accountBalance: prevState.accountBalance - debitsTotal\r\n        }));\r\n      })\r\n      .catch((error) => console.error(\"Error fetching Debits:\", error));\r\n  }\r\n\r\n  addCredit = (description, amount) => {\r\n    const newCredit = {\r\n      id: this.state.creditList.length + 1,\r\n      description: description,\r\n      amount: amount,\r\n      date: new Date().toISOString()\r\n    };\r\n    this.setState((prevState) => ({\r\n      creditList: [...prevState.creditList, newCredit],\r\n      accountBalance: prevState.accountBalance + amount\r\n    }));\r\n  };\r\n\r\n  addDebit = (description, amount) => {\r\n    const newDebit = {\r\n      id: this.state.debitList.length + 1,\r\n      description: description,\r\n      amount: amount,\r\n      date: new Date().toISOString()\r\n    };\r\n    this.setState((prevState) => ({\r\n      debitList: [...prevState.debitList, newDebit],\r\n      accountBalance: prevState.accountBalance - amount\r\n    }));\r\n  };\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance} />) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance}/>) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/bank-of-react-example-code-gh-pages\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}